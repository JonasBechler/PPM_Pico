.program ppm

;implement PPM on a pio in assebler

.wrap_target
entry:
     irq 0     side 1
     irq 1     side 0
     irq 2     side 0
     irq 3     side 0
     jmp entry side 0
.wrap
	

% c-sdk {
static inline void ppm_program_init(PIO pio, uint sm, uint offset, uint pin) {
     pio_sm_config c = ppm_program_get_default_config(offset);
     
     

     // set pin as Input & Map the state machine's IN/JMP pin group to one pin
     //pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);
     //sm_config_set_in_pins(&c, pin); // for WAIT, IN
     //sm_config_set_jmp_pin(&c, pin); // for JMP

     // set pin as Output & Map the state machine's Sideset pin group to one pin
     pio_sm_set_consecutive_pindirs(pio, sm, outputPin, 1, true);
     sm_config_set_sideset_pins (&c, pin)

     // Set this pin's GPIO function (connect PIO to the pad)
     pio_gpio_init(pio, pin);
     
     
     //f_neu = f_alt / div 
     int cyclesPerLoop = 2;
     float div = clock_get_hz(clk_sys) / (2048000 * cyclesPerLoop);
     sm_config_set_clkdiv(&c, div);

     
     // Load our configuration, and jump to the start of the program
     pio_sm_init(pio, sm, offset, &c);
     pio_sm_set_enabled(pio, sm, true);
}
%}
 
	

