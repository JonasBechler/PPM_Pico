.program ppm

;implement PPM on a pio in assebler

entry:
	out y 32

idle:
	jmp pin idle

counter:
	jmp pin output
	jmp y-- counter

output:
	in y 32
	push
	irq wait 0
	jmp entry

	

% c-sdk {
static inline void ppm_program_init(PIO pio, uint sm, uint offset, uint pin) {
     pio_sm_config c = ppm_program_get_default_config(offset);
     
     

     // Map the state machine's IN pin group to one pin, namely the `pin` parameter to this function.
     pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);
     sm_config_set_in_pins(&c, pin); // for WAIT, IN
     sm_config_set_jmp_pin(&c, pin); // for JMP
     
     
     //f_neu = f_alt / div 
     int cyclesPerLoop = 2;
     float div = clock_get_hz(clk_sys) / (2048000 * cyclesPerLoop);
     sm_config_set_clkdiv(&c, div);

     // Set this pin's GPIO function (connect PIO to the pad)
     pio_gpio_init(pio, pin);
     // Set the pin direction to output at the PIO
     pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);

     // Load our configuration, and jump to the start of the program
     pio_sm_init(pio, sm, offset, &c);
     // Set the state machine running
     pio_sm_set_enabled(pio, sm, true);
}
%}
 
	

